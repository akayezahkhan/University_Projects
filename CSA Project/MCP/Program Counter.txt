module ProgramCounter(
    input clk,
    input rst,
	 input PCWrite,
	 input PCWriteCond,
	 input Zero,
	 input [1:0] PCSource,
	 input [31:0] ALUresult,
	 input [31:0] ALU_out,
	 input [31:0] jump_address,
    output [31:0] PC_out
    );
	
	reg [31:0] PC;
	
	// mux before pc
	// this will decide PC_in  synchronous ... basically it is like writing to PC register
	always@(posedge clk or posedge rst)
		begin
			if (rst == 1)
				PC <= 0;
			else if(signal ==  1)
			begin
				if(PCSource == 2'b 00)
					PC <= ALUresult;
				else if(PCSource == 2'b 01)
					PC <= ALU_out;
				else if(PCSource == 2'b 10)
					PC <= jump_address;
				else if(PCSource == 2'b 11)
					PC <= jump_address;
			end
		end
	
	// this is the write signal for PC 
	// if a beq or jump happens
	wire signal;
	assign signal = (PCWriteCond & Zero) | PCWrite;
	
	// reading value of PC register so it will be assynchronous
	
	assign PC_out = PC;
	
endmodule